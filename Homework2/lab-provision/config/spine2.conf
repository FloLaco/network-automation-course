
system {
    host-name spine2;
    root-authentication {
        encrypted-password "$1$fv3Ke4LT$10nlsy3SEJy5ainm.kPTd.";
        ssh-rsa "ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key";
    }
    login {
        user vagrant {
            uid 2000;
            class super-user;
            authentication {
                ssh-rsa "ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key";
            }
        }
    }
    services {
        ssh {
            root-login allow;
        }
        netconf {
            ssh;
        }
    }
    syslog {
        user * {
            any emergency;
        }
        file messages {
            any notice;
            authorization info;
        }
        file interactive-commands {
            interactive-commands any;
        }
    }
    extensions {
        providers {
            juniper {
                license-type juniper deployment-scope commercial;
            }
            chef {
                license-type juniper deployment-scope commercial;
            }
        }
    }
}
interfaces {
    em0 {
        unit 0 {
            family inet {
                dhcp;
            }
        }
    }
    em1 {
        unit 0 {
            family inet {
                address 169.254.0.2/24;
            }
        }
    }
    lo0 {
        unit 0 {
            family inet {
                address 1.1.1.2/32
            }
        }
    }
}
protocols {
    lldp {
        interface all;
    }
}
/* This block of configuration has been generated by the role underlay-ebgp for Ansible */

interfaces {
    em5 {
        description " * to leaf1";
        unit 0 {
            family inet {
                address 172.16.0.2/31;
            }
        }
    }
    em6 {
        description " * to leaf2";
        unit 0 {
            family inet {
                address 172.16.0.6/31;
            }
        }
    }
    em7 {
        description " * to leaf3";
        unit 0 {
            family inet {
                address 172.16.0.10/31;
            }
        }
    }
}

protocols {
    bgp {
        log-updown;
        graceful-restart;
        group underlay-ipfabric {
            import bgp-ipclos-in;
            export  bgp-ipclos-out;
            type external;
            mtu-discovery;
            local-as 60002;
            bfd-liveness-detection {
                minimum-interval 350;
                multiplier 3;
                session-mode automatic;
            }
            multipath multiple-as;
            neighbor 172.16.0.3 {
                peer-as 60011;
            }
            neighbor 172.16.0.7 {
                peer-as 60012;
            }
            neighbor 172.16.0.11 {
                peer-as 60013;
            }
        }
    }
}

routing-options {
    router-id 1.1.1.2;
    forwarding-table {
        export pfe-ecmp;
    }
}

policy-options {
    policy-statement pfe-ecmp {
        then {
            load-balance per-packet;
        }
    }
    policy-statement bgp-ipclos-in {
        term loopbacks {
            from {
                route-filter 1.1.0.0/16 orlonger;
            }
            then accept;
        }
        term server {
            from {
                route-filter 172.16.0.0/16 orlonger;
            }
            then accept;
        }
    }
    policy-statement bgp-ipclos-out {
        term loopback {
            from {
                protocol direct;
                route-filter 1.1.1.2/32 orlonger;
            }
            then {
                next-hop self;
                accept;
            }
        }
        term server {
            from {
                protocol direct;
                route-filter 172.16.0.0/16 orlonger;
            }
            then {
                next-hop self;
                accept;
            }
        }
    }
}
