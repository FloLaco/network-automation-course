---
- name: install tcpdump
  yum:
    name: 
      - tcpdump
    state: present

- name: install libpcap-devel
  yum:
    name: 
      - libpcap-devel
    state: present

- name: install git
  yum:
    name: 
      - git
    state: present

- name: Register the current Go version (if any)
  command: /usr/local/go/bin/go version
  ignore_errors: yes
  register: go_version
  changed_when: false

- name: Remove old installation of Go
  file:
    path: /usr/local/go
    state: absent
  when: go_version is failed or go_version.stdout != go_version_target

- name: Download the Go tarball
  get_url:
    url: "{{ go_download_location }}"
    dest: /usr/local/src/{{ go_tarball }}
    checksum: "{{ go_tarball_checksum }}"
  when: go_version is failed or go_version.stdout != go_version_target

- name: Extract the Go tarball if Go is not yet installed or not the desired version
  unarchive:
    src: /usr/local/src/{{ go_tarball }}
    dest: /usr/local
    copy: no
  when: go_version is failed or go_version.stdout != go_version_target

- name: "Install required go packages"
  shell: "{{ goroot }}/bin/go get -u {{ item.url }}"
  environment:
    GOPATH: "{{ gopath }}"
    GOROOT: "{{ goroot }}"
  with_items: "{{ go_get }}"
  changed_when: false

- name: Compile ConfigNamer
  shell: "cp -r {{ item.src }} {{ gopath }}/src/{{ item.src }} ; {{ goroot }}/bin/go build -o {{ item.dest }} {{ item.src }}"
  environment:
    GOPATH: "{{ gopath }}"
    GOROOT: "{{ goroot }}"
  with_items: "{{ go_build }}"
  changed_when: false

- name: Systemd for ConfigNamer (renamer)
  copy: 
    src: /vagrant/roles/mgt_server/files/renamer.service
    dest: /etc/systemd/system/renamer.service
    owner: root
    group: root
    mode: 0644

- name: enable custom services
  systemd:
    name: "{{ service }}"
    state: started
    enabled: yes
  loop:
      - renamer
  loop_control:
    loop_var: service
  become_user: root
